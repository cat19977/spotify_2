[{"/Users/catsquillante/Desktop/spotify_2/src/index.js":"1","/Users/catsquillante/Desktop/spotify_2/src/Components/App.js":"2","/Users/catsquillante/Desktop/spotify_2/src/Components/Home.js":"3","/Users/catsquillante/Desktop/spotify_2/src/Configs/settings.js":"4","/Users/catsquillante/Desktop/spotify_2/src/Components/Api.js":"5","/Users/catsquillante/Desktop/spotify_2/src/Components/Dashboard.js":"6"},{"size":434,"mtime":1611863501099,"results":"7","hashOfConfig":"8"},{"size":1050,"mtime":1611794027591,"results":"9","hashOfConfig":"8"},{"size":1025,"mtime":1611862226704,"results":"10","hashOfConfig":"8"},{"size":192,"mtime":1611793357991,"results":"11","hashOfConfig":"8"},{"size":1634,"mtime":1611864691558,"results":"12","hashOfConfig":"8"},{"size":1949,"mtime":1611865472130,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"1t2rffe",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/Users/catsquillante/Desktop/spotify_2/src/index.js",["29","30","31","32"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, useHistory} from 'react-router-dom';\nimport App from './Components/App';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\n\n\n \nReactDOM.render(\n  \n  <Router>\n    <App/>\n  </Router>\n  ,\n  document.getElementById('root')\n);\n",["33","34"],"/Users/catsquillante/Desktop/spotify_2/src/Components/App.js",[],"/Users/catsquillante/Desktop/spotify_2/src/Components/Home.js",[],"/Users/catsquillante/Desktop/spotify_2/src/Configs/settings.js",[],"/Users/catsquillante/Desktop/spotify_2/src/Components/Api.js",[],"/Users/catsquillante/Desktop/spotify_2/src/Components/Dashboard.js",["35","36","37"],"import Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport React, {useState} from \"react\";\nimport './../Styling/Top.css';\n\nconst DropDown = ({on_Select})=>{\n    return (\n        <DropdownButton\n        alignRight\n        title=\"Top Songs\"\n        id=\"dropdown-menu-align-right\"\n        onSelect={on_Select}\n          >\n                <Dropdown.Item eventKey=\"short\">Short Term</Dropdown.Item>\n                <Dropdown.Item eventKey=\"medium\">Medium Term</Dropdown.Item>\n                <Dropdown.Item eventKey=\"long\">All Time</Dropdown.Item>\n        </DropdownButton>\n    )\n}\n\nconst Display_songs = ({term}) =>{\n    const key = 'tracks'.concat('_', String(term));\n    const data = JSON.parse(localStorage.getItem(key))\n    var titles = []\n    var artists = []\n    var img_url = []\n    for(var i in data){\n        var track = data[i]\n        titles.push(track['name'])\n        artists.push(track['artist'])\n        img_url.push(track['img'])\n    }\n    var listData = img_url.map((item, index) =>\n    <ul class=\"img-item\">\n        <img className=\"albums\" key={index} src={item}/>\n        <div class=\"details\">\n          <h3><a class=\"title\">{titles[index]}</a></h3>\n          <p class=\"artist\">{artists[index]}</p>\n        </div>\n    </ul>\n    );\n    return(\n      <div className='row'>\n        <div class='column'>{listData.slice(0,10)}</div>\n        <div class='column'>{listData.slice(10,20)}</div>\n        <div class='column'>{listData.slice(20,30)}</div>\n        <div class='column'>{listData.slice(30,40)}</div>\n        <div class='column'>{listData.slice(40,50)}</div>\n      </div>\n    )\n  }\n\nconst Dashboard= () =>{\n    const [value,setValue]= useState('short');\n\n    const handleSelect=(e)=>{\n        setValue(e)\n      }\n    return(\n        <div>\n         <DropDown on_Select = {handleSelect}/>\n         <Display_songs term = {value}/>\n        </div>\n    )\n}\n\nexport default Dashboard",{"ruleId":"38","severity":1,"message":"39","line":3,"column":35,"nodeType":"40","messageId":"41","endLine":3,"endColumn":40},{"ruleId":"38","severity":1,"message":"42","line":3,"column":42,"nodeType":"40","messageId":"41","endLine":3,"endColumn":52},{"ruleId":"38","severity":1,"message":"43","line":8,"column":8,"nodeType":"40","messageId":"41","endLine":8,"endColumn":9},{"ruleId":"38","severity":1,"message":"44","line":9,"column":8,"nodeType":"40","messageId":"41","endLine":9,"endColumn":14},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":35,"column":9,"nodeType":"51","endLine":35,"endColumn":57},{"ruleId":"52","severity":1,"message":"53","line":37,"column":15,"nodeType":"51","endLine":37,"endColumn":32},{"ruleId":"54","severity":1,"message":"55","line":62,"column":10,"nodeType":"51","endLine":62,"endColumn":41},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'$' is defined but never used.","'Popper' is defined but never used.","no-native-reassign",["56"],"no-negated-in-lhs",["57"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-pascal-case","Imported JSX component Display_songs must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]